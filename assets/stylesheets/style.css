@font-face {
    font-family: 'Nerd-Font-Icon';
      src: url('../fonts/NerdFontsSymbolsOnly/SymbolsNerdFontMono-Regular.ttf');
}

:root {
  --rich-black: #000814FF;
  --oxford-blue: #001D3DFF;
  --yale-blue: #003566FF;
  --mikado-yellow: #FFC300FF;
  --gold: #FFD60AFF;
  --colombia-blue: #C9DAEA;
  --yellow-green: #B6C454;
  --selective-yellow: #FFBA00;
  --brown: #964B00;
}

:root,
:root *,
:root::before,
:root::after {
  font-size: 1.5rem;
  box-sizing: border-box;
  margin: 0;
}

.icon-font,
.icon-font span {
  user-select: none;
  -webkit-user-select: none;
  font-family: 'Nerd-Font-Icon', serif-sans;
}

header {
  height: 3rem;
  color: white;
}

nav {
  position: fixed;
  width: 100%;
  z-index: 5;
  background-color: var(--rich-black);
  height: 2.5rem;
  display: flex;
  align-items: center;
  padding: 0.5rem;
  gap: 1rem;
}

.container {
  display: block;
  margin: 0 auto;
}

main {
  overflow-x: auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

section#sketch-grid {
  display: flex;
  flex-direction: column;
  --grid-item-size: 16px;
  user-select: none;
  -webkit-user-select: none;
  --grid-border-color: var(--gold);
  --grid-item-cell-color: var(--rich-black);
  border: 1px solid black;
  margin-left: auto;
  margin-right: auto;
}

section#sketch-grid .horizontal-flexbox {
  display: flex;
  height: fit-content;
  overflow: hidden;
}

.item-flexbox-border {
  border: 1px solid var(--grid-border-color);
}

section#sketch-grid .horizontal-flexbox .item-flexbox {
  flex: auto;
  background-color: white;
  height: var(--grid-item-size);
  width: var(--grid-item-size);
  transition: background-color 0.178s;
}

section#sketch-grid .horizontal-flexbox .item-flexbox.color-picked {
  background-color: var(--grid-item-cell-color);
}

button.navigation-button {
  color: white;
  font-size: .8rem;
  background-color: var(--oxford-blue);
  border-radius: .3rem;
  border: 1px solid var(--yale-blue);
  padding: .3rem;
  transition: background-color 0.2s;
}

button.navigation-button:hover {
  background-color: var(--yellow-green);
  color: var(--rich-black);
}

button.navigation-button:focus {
  background-color: var(--colombia-blue);
  color: var(--rich-black);
}

div#github-profile-image {
  border-radius: 50%;
  overflow: hidden;
  border: 1px solid black;
  height: 100%;
  margin-right: 1em;
}

div#github-profile-image {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: black;
  position: relative;
  cursor: pointer;
  margin: 0 0 0 auto;
}

div#github-profile-image::before {
  color: white;
  position: absolute;
  display: none;
}

div#github-profile-image a,
div#github-profile-image img,
div#github-profile-image img a {
  height: 100%;
}

div#github-profile-image img {
  object-fit: contain;
  width: 100%;
  opacity: 1;
  transition: opacity 0.2s;
}

div#github-profile-image:hover img {
  opacity: 0.3;
}

div#github-profile-image::before {
  content: 'ギット';
  width: 990%;
  text-align: center;
  font-size: .35em;
}

div#github-profile-image:hover::before {
  display: block;
}

dialog#new-grid-dialog::backdrop {
  background-color: black;
  opacity: .5;
}

dialog#new-grid-dialog {
  position: absolute;
  inset: 0;
  border-radius: .5rem;
  margin: auto;
  width: max-content;
}

.control-button {
  display: flex;
}

.control-button span {
  font-size: .5em;
  border-radius: 50%;
}

#close-new-grid-dialog-button span,
#close-color-picker-button span {
  color: red;
  background: #800000;
}

#close-new-grid-dialog-button span:active,
#close-color-picker-button span:active {
  filter: brightness(.8);
}

#minimize-new-grid-dialog-button span,
#minimize-color-picker-button span {
  color: var(--selective-yellow);
  background: var(--brown);
}

#minimize-new-grid-dialog-button span:active,
#minimize-color-picker-button span:active {
  filter: brightness(.8);
}

.controls-dialog {
  display: flex;
  gap: .3rem;
  padding: .5rem;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  background: #84DCCF;
}

dialog#new-grid-dialog form {
  display: flex;
  flex-direction: column;
  gap: .5rem;
}

dialog#new-grid-dialog form * {
  font-size: .8em;
}

div#margin-bottom-after-controls {
  margin-bottom: 1rem;
}

.text-center {
  text-align: center;
}

#new-grid-dialog-main-icon {
  justify-self: center;
}

#new-grid-dialog-main-icon span {
  font-size: 1.5em;
}

#home-logo a {
  text-decoration: none;
  color: white;
}

#home-logo a:hover {
  text-decoration: underline;
}

#toolbar {
  border: 1px solid black;
  border-radius: .5rem;
  width: max-content;
  padding: .5rem;
  display: flex;
  flex-direction: column;
  gap: .5rem;
  background: white;
  height: max-content;
  top: 50%;
  transform: translateY(-50%);
  position: fixed;
}

#toolbar button,
#toolbar #toolbar-drag {
  cursor: pointer;
  padding: .3rem;
  border-radius: .5rem;
  border: 1px solid transparent;
}

#toolbar button:hover {
  filter: brightness(85%);
}

#toolbar hr {
  cursor: default;
  background: black;
  padding: 0;
  border-bottom: 1px solid black;
}

#toolbar #toolbar-drag:active {
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}

#color-mode.color-active,
#draw-mode.draw-active,
#erase-mode.erase-active {
  border: 1px solid black;
}

#draw-mode.draw-active {
  background-color: #90aaee80;
}

#erase-mode.erase-active {
  background-color: pink;
}

#color-picker-div {
  /* position: relative */
}

#color-picker-picker {
  position: fixed;
  min-width: max-content;
  padding: .5rem 1rem;
  background: white;
  border: 1px solid black;
  border-radius: .5rem;
  box-shadow: 0 0 5px 3px #00000060;
  display: flex;
  flex-direction: column;
  gap: .5rem;
  overflow: hidden;
  bottom: 0;
  height: max-content;
  left: 0;
  margin: 0;
  width: max-content;
  padding-bottom: 1rem;
}

#color-picker-picker p {
  font-size: .7em;
}

#color-picker-picker input {
  width: 3rem;
  height: 2rem;
}

.apply-cancel {
  display: flex;
  gap: .2rem;
}

.apply-cancel button {
  font-size: .6em;
  border: 1px solid var(--rich-black);
}

.apply-cancel * {
  flex: 1;
}

#color-picker-row {
  display: flex;
  align-items: center;
  gap: .8rem;
}

#color-picker-row span {
  font-size: .6em;
}

.apply-cancel button[type='submit'] {
  background-color: var(--yellow-green);
}

.apply-cancel button:hover {
  filter: brightness(.9);
}

.apply-cancel button:focus {
  outline: 1px solid black;
}

#previous-colors-container {
  gap: .3rem;
  display: flex;
  flex-flow: column wrap;
}

#previous-colors-container p {
  font-size: .7em;
}

#previous-colors-flexbox {
  display: flex;
  flex: 1 1 21%;
  max-width: 9rem;
  gap: .3rem;
  flex-flow: row wrap;
}

#previous-colors-flexbox .previous-color {
  height: 100%;
  width: 1.5rem;
  height: 1.5rem;
  display: inline-block;
  border: 1px solid black;
  box-shadow: inset 0 0 0px .1em #00000080;
  transition: opacity 0.1s;
  display: block;
}

#previous-colors-flexbox .previous-color:hover {
  opacity: .7;
}

#previous-colors-flexbox .previous-color.previous-color-dark {
  box-shadow: inset 0 0 0px .1em #FFFFFF80;
}

#grid-size label {
  font-size: .7em;
}

#color-picker-picker.invisible {
  display: none;
}

.focused {
  z-index: 2;
}

.fade-in-out-top {
  animation-name: fadeInOutTop;
  animation-duration: 3s;
  animation-fill-mode: both;
}

#success-message {
  outline: 2px solid #006000;
  background-color: #20AA20;
  position: absolute;
  z-index: 999;
  top: 0%;
  left: 50%;
  transform: translateX(-50%) translateY(50%);
  padding: .5rem 1rem;
  border-radius: .5rem;
  color: white;
  align-items: center;
  gap: .5rem;
  display: none;
}

#success-message p {
  font-size: .7em;
}

#error-message {
  outline: 2px solid #600000;
  background-color: #AA2020;
  position: absolute;
  z-index: 999;
  top: 0%;
  left: 50%;
  transform: translateX(-50%) translateY(50%);
  padding: .5rem 1rem;
  border-radius: .5rem;
  color: white;
  align-items: center;
  gap: .5rem;
  display: none;
}

#error-message p {
  font-size: .7em;
}

@keyframes fadeInOutTop {
  0% {
    opacity: 0;
      transform: translateX(-50%) translateY(-100%);
    }
  20% {
    opacity: 1;
      transform: translateX(-50%) translateY(50%);
    }
  80% {
    opacity: 1;
      transform: translateX(-50%) translateY(50%);
    }
  100% {
    opacity: 0;
      transform: translateX(-50%) translateY(-100%);
    }
}
